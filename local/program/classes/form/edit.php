<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 *
 * @package    local_program
 * @author     Joey Zhang
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

require_once("$CFG->libdir/formslib.php");

class edit extends moodleform {
    // add elements to form
    public function definition()
    {
        global $CFG;

        $mform = $this->_form;

        // 0. acccount id
        $mform->addElement('hidden', 'id');
        $mform->setType('id', PARAM_INT);

        // 1. program name
        $mform->addElement('text', 'name', 'Program Name');
        $mform->setType('name', PARAM_NOTAGS);
        $mform->setDefault('name', '');

        // 2. program id number
        $mform->addElement('text', 'idnumber', 'Program ID number');
        $mform->setType('idnumber', PARAM_NOTAGS);
        $mform->setDefault('idnumber', '');

        // 3. program description
        $mform->addElement('textarea', 'description', 'Program Description');
        $mform->setType('description', PARAM_NOTAGS);
        $mform->setDefault('description', '');

        // 4. acccount selector
        $mform->addElement('select', 'acccountid', 'Program Acccount', $this->get_all_acccounts());
        $mform->setType('acccountid', PARAM_NOTAGS);
        $mform->setDefault('acccountid', '');

        // 5. courses list
        $areaNames = [];
        foreach ($this->get_all_courses() as $id => $name) {
            $areaNames[$id] = $name;
        }
        $options = [
            'multiple' => true,
            'noselectionstring' => 'Please select courses',
        ];
        $mform->addElement('autocomplete', 'courses', 'Courses In the Program', $areaNames, $options);

        // add submit and cancel button
        $this->add_action_buttons();
    }

    // custom valication should be added here
    function validation($data, $files)
    {
        return parent::validation($data, $files); // TODO: Change the autogenerated stub
    }

    // TODO: temp function, gonna remove later
    function get_all_acccounts(): array
    {
        global $DB;
        $allAcccounts = $DB->get_records_menu('local_acccount', ['archived' => 0], '', 'id,name');
        $allAcccounts[0] = 'Shared Space';
        return $allAcccounts ?? [];
    }

    function get_all_courses(): array
    {
        global $DB;
        return $DB->get_records_menu('course', null, '', 'id,fullname') ?? [];
    }
}